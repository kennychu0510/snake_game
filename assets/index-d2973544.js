var m=Object.defineProperty;var L=(i,e,t)=>e in i?m(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t;var a=(i,e,t)=>(L(i,typeof e!="symbol"?e+"":e,t),t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))r(o);new MutationObserver(o=>{for(const c of o)if(c.type==="childList")for(const l of c.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&r(l)}).observe(document,{childList:!0,subtree:!0});function t(o){const c={};return o.integrity&&(c.integrity=o.integrity),o.referrerpolicy&&(c.referrerPolicy=o.referrerpolicy),o.crossorigin==="use-credentials"?c.credentials="include":o.crossorigin==="anonymous"?c.credentials="omit":c.credentials="same-origin",c}function r(o){if(o.ep)return;o.ep=!0;const c=t(o);fetch(o.href,c)}})();const k=300,g=400,s=20,f=g/s,u=k/s;var n=(i=>(i[i.RIGHT=0]="RIGHT",i[i.DOWN=1]="DOWN",i[i.LEFT=2]="LEFT",i[i.UP=3]="UP",i))(n||{});const T=20;class S{constructor(){a(this,"rows",k/s);a(this,"columns",g/s)}draw(e){e.strokeStyle="grey";for(let t=0;t<this.rows*s;t+=s)for(let r=0;r<this.columns*s;r+=s)e.strokeRect(t,r,s,s)}}function d(i){const e=document.querySelector(i);if(!e)throw new Error(i+" not found");return e}const b=d("#game-header span");class F{constructor(e,t){a(this,"color","red");a(this,"position");a(this,"ctx");a(this,"direction");a(this,"tick",0);a(this,"alive",!0);this.ctx=e,this.direction=n.RIGHT,this.position=[{x:Math.floor(u/2),y:Math.floor(f/2)}],this.genFood(t)}draw(e){this.tick++;for(let t of this.position){const r=t.x,o=t.y;e[r][o]="S"}this.checkCollision()&&(this.alive=!1),this.tick%T===0&&this.alive&&this.update(e)}update(e){const t={x:this.position[0].x,y:this.position[0].y};switch(this.direction){case n.RIGHT:t.x===u-1?t.x=0:t.x+=1;break;case n.DOWN:t.y===f-1?t.y=0:t.y+=1;break;case n.LEFT:t.x===0?t.x=u-1:t.x-=1;break;case n.UP:t.y===0?t.y=f-1:t.y-=1;break}if(this.position=[t,...this.position],e[t.x][t.y]==="F")this.genFood(e),b.innerText=String(this.position.length),console.log(this.position.length);else{const r=this.position.pop();r&&(e[r.x][r.y]=null)}}changeDirection(e){this.direction===n.RIGHT&&e===n.LEFT||this.direction===n.LEFT&&e===n.RIGHT||this.direction===n.UP&&e===n.DOWN||this.direction===n.DOWN&&e===n.UP||(this.direction=e)}checkCollision(){const e=this.position[0];for(let t=1;t<this.position.length;t++)if(this.position[t].x===e.x&&this.position[t].y===e.y)return!0;return!1}genFood(e){const t=[];for(let l=0;l<e.length;l++)for(let p=0;p<e[l].length;p++)e[l][p]===null&&t.push({x:l,y:p});const r=Math.floor(Math.random()*t.length),o=t[r].x,c=t[r].y;e[o][c]="F"}}class v{constructor(e){a(this,"ctx");a(this,"snake");a(this,"background",new S);a(this,"board",[]);this.ctx=e;for(let t=0;t<u;t++){const r=[];for(let o=0;o<f;o++)r.push(null);this.board.push(r)}this.snake=new F(this.ctx,this.board)}draw(){this.snake.draw(this.board);for(let e=0;e<u;e++)for(let t=0;t<f;t++)switch(this.board[e][t]){case null:this.drawNull(e,t);break;case"F":this.drawFood(e,t);break;case"S":this.drawSnake(e,t);break}this.snake.alive||(this.ctx.font="24px serif",this.ctx.textAlign="center",this.ctx.fillStyle="white",this.ctx.fillText("You are dead",k/2,g/2))}drawSnake(e,t){this.ctx.fillStyle="red",this.ctx.fillRect(e*s,t*s,s,s)}drawNull(e,t){this.ctx.strokeStyle="grey",this.ctx.strokeRect(e*s,t*s,s,s)}drawFood(e,t){this.ctx.fillStyle="lime",this.ctx.fillRect(e*s,t*s,s,s)}}const y=d("canvas"),E=d("#left-button"),D=d("#right-button"),U=d("#down-button"),N=d("#up-button"),x=y.getContext("2d");y.width=k;y.height=g;window.devicePixelRatio=2;const h=new v(x);function w(){G(x),h.draw(),requestAnimationFrame(w)}function G(i){i.clearRect(0,0,k,g)}w();document.addEventListener("keydown",i=>{switch(i.key){case"a":case"ArrowLeft":h.snake.changeDirection(n.LEFT);break;case"s":case"ArrowDown":h.snake.changeDirection(n.DOWN);break;case"d":case"ArrowRight":h.snake.changeDirection(n.RIGHT);break;case"w":case"ArrowUp":h.snake.changeDirection(n.UP);break}});E.addEventListener("click",()=>{h.snake.changeDirection(n.LEFT)});D.addEventListener("click",()=>{h.snake.changeDirection(n.RIGHT)});U.addEventListener("click",()=>{h.snake.changeDirection(n.DOWN)});N.addEventListener("click",()=>{h.snake.changeDirection(n.UP)});
